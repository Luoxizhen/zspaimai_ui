{
    "case_name": "test_get_current_page",
    "run_time": "20211019 21:34:15",
    "test_type": "AppTest",
    "case_doc": null,
    "success": false,
    "failures": "",
    "errors": "Traceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/minium-1.0.8-py3.9.egg/minium/framework/libs/unittest/suite.py\", line 32, in _handleClassSetUp\n    _miniClassSetUp()\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/minium-1.0.8-py3.9.egg/minium/framework/minitest.py\", line 484, in _miniClassSetUp\n    cls.native = get_native(cls.CONFIG)\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/minium-1.0.8-py3.9.egg/minium/framework/minitest.py\", line 69, in get_native\n    g_native = minium.native.get_native_driver(cfg.platform, cfg)\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/minium-1.0.8-py3.9.egg/minium/native/__init__.py\", line 43, in get_native_driver\n    raise RuntimeError(\"the 'os_name' in your config file is not in predefine\")\nRuntimeError: the 'os_name' in your config file is not in predefine\n",
    "start_timestamp": 1634650455.688638,
    "is_failure": false,
    "is_error": true,
    "module": ".Users.yuanyuanhe.PycharmProjects.miniprogram-demo-test.apptest",
    "package": "apptest",
    "failed_line_num": -1,
    "device": {},
    "log_filename": "test_get_current_page.log",
    "error_type": "RuntimeError",
    "error_value": "the 'os_name' in your config file is not in predefine",
    "screen_info": [],
    "check_list": [],
    "assert_list": [],
    "stop_timestamp": 1634650455.688753,
    "appId": "",
    "appName": "",
    "source": {
        "code": [
            "    def test_get_current_page(self):\n",
            "        self.assertEqual(self.page.path, \"page/component/index\")  # \u6709\u9519\u8bef\uff0c\u62a5\u544a\u4f1a\u628a\u8fd9\u884c\u4ee3\u7801\u6807\u7ea2\n",
            "        self.assertIsInstance(self.page.query, dict)\n"
        ],
        "start": 14
    },
    "filename": "test_get_current_page.json"
}